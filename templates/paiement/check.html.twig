{% extends 'base.html.twig' %}

{% block title %}Hello PaiementController!{% endblock %}

{% block contenu %}
    <head>
        <title>Checkout</title>
        <script src="https://js.stripe.com/v3/"></script>
    </head>
    <script>
        // Set your publishable key: remember to change this to your live secret key in production
        // See your keys here: https://dashboard.stripe.com/account/apikeys
        var stripe = Stripe('pk_test_8J0n9RtVZxgg3PjlX8MAiVI700QlmLXEcn');
        var elements = stripe.elements();
    </script>

    <div id="card-element">
        <!-- Elements will create input elements here -->
    </div>

    <!-- We'll put the error messages in this element -->
    <div id="card-errors" role="alert"></div>

    <button id="submit">Pay</button>

    <script>
        // Set up Stripe.js and Elements to use in checkout form
        var style = {
            base: {
                color: "#32325d",
            }
        };

        var card = elements.create("card", { style: style });
        card.mount("#card-element");


        card.addEventListener('change', ({error}) => {
            const displayError = document.getElementById('card-errors');

            if (error) {alert(error.message);
                displayError.textContent = error.message;
            } else {
                displayError.textContent = 'ok';
            }
        });

        stripe.confirmCardPayment('{{clientsecret}}', {
            payment_method: {card: card}
        }).then(function(result) {
            if (result.error) {
                // Show error to your customer (e.g., insufficient funds)
                console.log(result.error.message);
            } else {
                // The payment has been processed!
                if (result.paymentIntent.status === 'succeeded') {
                    // Show a success message to your customer
                    // There's a risk of the customer closing the window before callback execution
                    // Set up a webhook or plugin to listen for the payment_intent.succeeded event
                    // that handles any business critical post-payment actions
                }
            }
        });
    </script>
{% endblock %}
